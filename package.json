{
  "name": "stylus-supremacy",
  "displayName": "Manta's Stylus Supremacy",
  "description": "Make your Stylus files look great again.",
  "version": "0.3.2",
  "publisher": "thisismanta",
  "categories": [
    "Formatters",
    "Languages"
  ],
  "keywords": [
    "stylus",
    "css",
    "format",
    "pretty",
    "beautify"
  ],
  "repository": {
    "url": "https://github.com/ThisIsManta/vscode-stylus-supremacy"
  },
  "bugs": {
    "url": "https://github.com/ThisIsManta/vscode-stylus-supremacy/issues"
  },
  "icon": "misc/icon.png",
  "galleryBanner": {
    "color": "#D50000",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.11.0"
  },
  "activationEvents": [
    "onLanguage:stylus"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "Stylus Supremacy",
      "properties": {
        "stylusSupremacy.insertColons": {
          "description": "Insert or remove a colon after a property name.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertSemicolons": {
          "description": "Insert or remove a semi-colon after a property value, a variable declaration, a variable assignment and a function call.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertBraces": {
          "description": "Insert or remove a pair of curly braces between a selector body, a mixin body and a function body. Note that this option does not affect *@block* construction, see alwaysUseAtBlock.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertNewLineBetweenGroups": {
          "description": "Represent a number of new-line between different type of groups.",
          "type": "integer",
          "minimum": 0,
          "default": 1
        },
        "stylusSupremacy.insertNewLineBetweenSelectors": {
          "description": "Insert or remove a new-line between selectors.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.insertSpaceBeforeComment": {
          "description": "Insert or remove a white-space before a comment.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertSpaceAfterComment": {
          "description": "Insert or remove a white-space after a comment.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertSpaceAfterComma": {
          "description": "Insert or remove a white-space after a comma.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertSpaceInsideParenthesis": {
          "description": "Insert or remove a white-space after an open parenthesis and before a close parenthesis.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.insertParenthesisAroundIfCondition": {
          "description": "Insert or remove a pair of parentheses between *if*-condition.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.insertNewLineBeforeElse": {
          "description": "Insert or remove a new-line before *else* keyword.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.insertLeadingZeroBeforeFraction": {
          "description": "Insert or remove a zero before a number that between 1 and 0.",
          "type": "boolean",
          "default": true
        },
        "stylusSupremacy.quoteChar": {
          "description": "Represent a quote character that is used to begin and terminate a string. You must choose either single-quote or double-quote.",
          "oneOf": [
            "'",
            "\""
          ],
          "default": "'"
        },
        "stylusSupremacy.sortProperties": {
          "description": "Can be either \n`false` for doing nothing about the CSS property order, \n\"alphabetical\" for sorting CSS properties from A to Z, \n\"grouped\" for sorting CSS properties according to https://github.com/SimenB/stylint/blob/master/src/data/ordering.json, \nor an array of property names that defines the property order (for example, [\"display\", \"margin\", \"padding\"]).",
          "oneOf": [
            false,
            "alphabetical",
            "grouped",
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          ],
          "default": false
        },
        "stylusSupremacy.alwaysUseImport": {
          "description": "Convert *@require* to *@import*.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.alwaysUseNot": {
          "description": "Convert *!* operator to *not* keyword or vice versa.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.alwaysUseAtBlock": {
          "description": "Convert an increased-indent at-block construction to an explicit one with *@block* keyword or vice versa. Note that this option ignores **`insertBraces`** option.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.alwaysUseExtends": {
          "description": "Convert *@extend* keyword to *@extends* keyword or vice versa.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.alwaysUseZeroWithoutUnit": {
          "description": "Convert `0px`, `0%`, `0em` and so on to `0` without units or vice versa.",
          "type": "boolean",
          "default": false
        },
        "stylusSupremacy.reduceMarginAndPaddingValues": {
          "description": "Reduce `margin` and `padding` duplicate values by converting `margin x` to `margin x x x x`, `margin x y` to `margin x y x y` where `x`, `y` is a property value.",
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "compile": "tsc --watch --project ./",
    "vscode:prepublish": "tsc --skipLibCheck --project ./",
    "preversion": "rm -rf node_modules && npm install",
    "version": "vsce publish",
    "postversion": "git push --tags --quiet origin master:master"
  },
  "devDependencies": {
    "@types/node": "^6.0.40",
    "@types/lodash": "^4.14.58",
    "@types/stylus": "^0.48.27",
    "typescript": "^2.2.2",
    "vscode": "^1.1.0"
  },
  "dependencies": {
    "lodash": "^4.17.4",
    "stylus": "^0.54.5",
    "stylus-supremacy": "0.2.6"
  }
}
